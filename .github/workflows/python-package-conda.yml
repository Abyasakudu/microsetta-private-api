name: microsetta-private-api CI
    
on: 
  push:
    branches: [ master ]
  pull_request:
    
jobs:
  # Label of the runner job
  postgres-runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install and test
        uses: conda-incubator/setup-miniconda@v2
        with:        
          auto-update-conda: true
          python-version: 3.6 
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda create --yes -n test-microsetta-private python=3.6
          conda env create -f ci/conda_requirements.txt
          conda activate test-microsetta-private
          pip install -r ci/pip_requirements.txt
          make install
      - name: Tests
        shell: bash -l {0}
        run: |
          conda activate test-microsetta-private
          python microsetta_private_api/LEGACY/build_db.py
          make test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: flake8
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: install dependencies
      run: python -m pip install --upgrade pip
    - name: lint
      run: |
        pip install -q flake8
        make lint
        
    
