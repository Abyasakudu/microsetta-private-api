name: microsetta-private-api CI
    
on: 
  push:
    branches: [ master ]
  pull_request:
    
jobs:
  # Label of the runner job
  postgres-runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest
      
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:9.5
        env:
          POSTGRES_DB: ag_test  
          POSTGRES_USER: postgres  
          POSTGRES_PASSWORD: postgres
          
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # based on https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml#L44-L72
          - 5432/tcp

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup for conda
        uses: conda-incubator/setup-miniconda@v2
        with:        
          auto-update-conda: true
          python-version: 3.7 
      
      - name: Install
        shell: bash -l {0}
        run: |
          pgport=${{ job.services.postgres.ports[5432] }}
          sed -i "s/self.port = 5432/self.port = $pgport/" microsetta_private_api/config_manager.py
          conda create --yes -n test-microsetta-private python=3.7
          conda activate test-microsetta-private
          conda install --yes --file ci/conda_requirements.txt
          pip install -r ci/pip_requirements.txt
          python setup.py install
          python microsetta_private_api/LEGACY/build_db.py

      - name: Test
        shell: bash
        run: conda activate test-microsetta-private; make test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: flake8
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: install dependencies
      run: python -m pip install --upgrade pip
    - name: lint
      run: |
        pip install -q flake8
        make lint
        
    
