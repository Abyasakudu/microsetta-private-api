# Note that in reality essentially all of these functions would require oath security, but it makes them hard to test
# through the swagger web ui (as you have to send the authorization header, I don't yet know how to do from there...?)
# so only /account get has oath implemented.
# TODO: Where does locale go?  needs to be included ... where? Just re surveys?
# survey identifier, survey locale, key-value pair of question id (int) and answer (int or list of ints or free form text)
openapi: 3.0.0
info:
  description: Private Microsetta RESTful API
  version: "0.3.0-oas3"
  title: Private Microsetta RESTful API (OAS 3.0)
servers:
  - url: 'http://localhost:8082/api'
paths:
  '/accounts':
    # NB: Not including a get: seems like seeing all accounts is an extension for the future (for admin?)
    post:
      operationId: implementation.register_account
      tags:
        - Account
      summary: Register new user account
      description: Register new user account
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/first_name'
              - $ref: '#/components/schemas/last_name'
              - $ref: '#/components/schemas/email'
              - $ref: '#/components/schemas/address'
              - $ref: '#/components/schemas/account_type'
              - $ref: '#/components/schemas/kit_name'
              - $ref: '#/components/schemas/kit_code'
      responses:
        '201':
          description: Successfully registered new user account
          headers:
            Location:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '422':
          $ref: '#/components/responses/422UnprocessableEntity'


  '/accounts/{acct_id}':
    get:
      operationId: implementation.read_account
      tags:
        - Account
      summary: Get user account information
      description: Get user account information
      parameters:
        - $ref: '#/components/parameters/acct_id'
      responses:
        '200':
          description: Successfully returned account information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
      security:
        - Oauth2Scheme:
            - uid
    put:
      operationId: implementation.update_account
      tags:
        - Account
      summary: Update user account information
      description: Update user account information
      parameters:
        - $ref: '#/components/parameters/acct_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/first_name'
                - $ref: '#/components/schemas/last_name'
                - $ref: '#/components/schemas/email'
                - $ref: '#/components/schemas/address'
      responses:
        '200':
          description: Successfully updated user account information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          $ref: '#/components/responses/422UnprocessableEntity'

  '/accounts/{acct_id}/sources':
    get:
      operationId: implementation.read_sources
      tags:
        - Sources
      summary: Get sources associated with account, filtered by source type
      description: Get sources associated with account, filtered by source type
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_type'
      responses:
        '200':
          description: Successfully returned sources
          content:
            application/json:
              schema:
                type: array
                items:  # NB: return whole source objects, unless returning >5KB compressed data
                  oneOf:
                  - $ref: '#/components/schemas/human_source'
                  - $ref: '#/components/schemas/animal_source'
                  - $ref: '#/components/schemas/environmental_source'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      operationId: implementation.create_source
      tags:
        - Source
      summary: Create new source of a specific type
      description: Create new source of a specific type
      parameters:
        - $ref: '#/components/parameters/acct_id'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/human_source'
                - $ref: '#/components/schemas/animal_source'
                - $ref: '#/components/schemas/environmental_source'
              example:
                source_type: human
                source_name: Jane Doe
                is_consented: false
                # NB: Getting the consent text that this source should agree to is outside the scope of this api
      responses:
        '201':
          description: Successfully created new source
          headers:
            Location:
              schema:
                type: string
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/human_source'
                  - $ref: '#/components/schemas/animal_source'
                  - $ref: '#/components/schemas/environmental_source'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          $ref: '#/components/responses/422UnprocessableEntity'

  '/accounts/{acct_id}/sources/{source_id}':
    get:
      operationId: implementation.read_source
      tags:
        - Source
      summary: Get information about source
      description: Get information about source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
      responses:
        '200':
          description: Successfully returned source information
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/human_source'
                  - $ref: '#/components/schemas/animal_source'
                  - $ref: '#/components/schemas/environmental_source'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
    put:
      operationId: implementation.update_source
      tags:
        - Source
      summary: Update information for source
      description: Update information for source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/human_source'
                - $ref: '#/components/schemas/animal_source'
                - $ref: '#/components/schemas/environmental_source'
              example:
                source_type: human
                source_name: Jane Doe
                is_consented: false
      responses:
        '200':
          description: Successfully updated source information
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/human_source'
                  - $ref: '#/components/schemas/animal_source'
                  - $ref: '#/components/schemas/environmental_source'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          $ref: '#/components/responses/422UnprocessableEntity'
    delete:
      operationId: implementation.delete_source
      tags:
        - Source
      summary: Delete source
      description: Delete source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
      responses:
        '204':
          description: Successfully deleted source
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          $ref: '#/components/responses/422UnprocessableEntity'
          # NB: This would be returned if source cannot be deleted bc has a sample assigned to it

  '/accounts/{acct_id}/sources/{source_id}/survey_templates':
    get:
      operationId: implementation.read_survey_templates
      tags:
        - Survey Templates
      summary: Get survey templates available to this source
      description: Get survey templates available to this source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/locale_code'
      responses:
        '200':
          description: Successfully returned list of survey templates
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_template_id:
                    $ref: '#/components/schemas/survey_template_id'
                  survey_template_title:
                    $ref: '#/components/schemas/survey_template_title'
                  survey_template_version:
                    $ref: '#/components/schemas/survey_template_version'
                  survey_template_type:
                    $ref: '#/components/schemas/survey_template_type'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
    # NB: No delete, put, or post for survey templates--can maybe expand to that for admin user in future

  '/accounts/{acct_id}/sources/{source_id}/survey_templates/{survey_template_id}':
    get:
      operationId: implementation.read_survey_template
      tags:
        - Survey Templates
      summary: Get a particular survey template available to this source
      description: Get a particular survey template available to this source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/survey_template_id'
        - $ref: '#/components/parameters/locale_code'
      responses:
        '200':
          description: Successfully returned a specific survey template
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_template_id:
                    $ref: '#/components/schemas/survey_template_id'
                  survey_template_title:
                    $ref: '#/components/schemas/survey_template_title'
                  survey_template_version:
                    $ref: '#/components/schemas/survey_template_version'
                  survey_template_type:
                    $ref: '#/components/schemas/survey_template_type'
                  survey_template_text:
                    # The contents of this string ARE structured, but their structure is not specified in THIS api.
                    # Could be *either* vue-compatible json to be used to generate an HTML form OR
                    # a customized link to direct to an external survey
                    type: string
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
    # NB: No delete, put, or post for a particular survey template--can maybe expand to that for admin user in future

  '/accounts/{acct_id}/sources/{source_id}/surveys':
    # NB: "survey" refers to an instance of an answered survey. In contrast, the set of *questions* comprising a survey
    # is called a "survey template" (see elsewhere in this api)
    get:
      operationId: implementation.read_answered_surveys
      tags:
        - Surveys
      summary: Get answered survey instances associated with source
      description: Get answered survey instances associated with source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/locale_code'
      responses:
        '200':
          description: Successfully returned list of answered surveys
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    survey_id:
                      $ref: '#/components/schemas/survey_id'
                    survey_template_title:
                      $ref: '#/components/schemas/survey_template_title'
                    survey_template_version:
                      $ref: '#/components/schemas/survey_template_version'
                    survey_template_type:
                      $ref: '#/components/schemas/survey_template_type'
                    # Wonder if someday we might want the date it was answered?
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      operationId: implementation.submit_answered_survey
      tags:
        - Surveys
      summary: Submit new answered survey
      description: Submit new answered survey
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/locale_code'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/survey_template_id'
              - $ref: '#/components/schemas/survey_text'
      responses:
        '201':
          description: Successfully submitted new answered survey
          headers:
            Location:
              schema:
                type: string
          content:
            application/json:
              schema:
                # TODO: Should I return any contents here, or just link to new answered survey URL in header?
                $ref: '#/components/schemas/not_yet_implemented'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '422':
          $ref: '#/components/responses/422UnprocessableEntity'

  '/accounts/{acct_id}/sources/{source_id}/surveys/{survey_id}':
    get:
      operationId: implementation.read_answered_survey
      tags:
        - Survey
      summary: Get information about an answered survey
      description: Get information about an answered survey
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/survey_id'
      responses:
        '200':
          description: Successfully returned information about answered survey
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_id:
                    $ref: '#/components/schemas/survey_id'
                  survey_template_title:
                    $ref: '#/components/schemas/survey_template_title'
                  survey_template_version:
                    $ref: '#/components/schemas/survey_template_version'
                  survey_template_type:
                    $ref: '#/components/schemas/survey_template_type'
                  survey_text:
                    $ref: '#/components/schemas/survey_text'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
    # TODO: true?->NB: Getting the list of surveys a source *can* take is outside the scope of this api
    # NB: NO "put"--you shouldn't update an answered survey, but instead should take a new one
    delete:
      operationId: implementation.delete_answered_survey
      tags:
        - Survey
      summary: Delete an answered survey
      description: Delete an answered survey
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/survey_id'
      responses:
        '204':
          description: Successfully deleted answered survey
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          $ref: '#/components/responses/422UnprocessableEntity'
          # NB: This would be returned if survey cannot be deleted bc has a sample assigned to it

  '/accounts/{acct_id}/sources/{source_id}/samples':
    get:
      operationId: implementation.read_sample_associations
      tags:
        - Samples
      summary: Get samples associated with this source
      description: Get samples associated with this source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
      responses:
        '200':
          description: Successfully returned list of samples
          content:
            application/json:
              schema:
                type: array
                items:  # Returning full samples instead of just ids as their info won't be large
                  $ref: '#/components/schemas/sample'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      operationId: implementation.associate_sample
      tags:
        - Sample
      summary: Associate an unassociated sample with this source
      description: Associate an unassociated sample with this source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/sample_barcode'
                # NB: Getting the sample barcode to input here is outside the scope of this endpoint--see kits
                - $ref: '#/components/schemas/sample_site'
                - $ref: '#/components/schemas/sample_datetime'
                - $ref: '#/components/schemas/sample_notes'
            example:
              sample_barcode: 000102030004
              sample_site: stool
              sample_datetime: 2017-07-21T17:32:28Z
              sample_notes: "Oops, I dropped it"
      responses:
        '201':
          description: Successfully associated sample with source
          headers:
            Location:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sample'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          $ref: '#/components/responses/422UnprocessableEntity'

  '/accounts/{acct_id}/sources/{source_id}/samples/{sample_id}':
    # NB: info about the sample--type, datetime, notes--does NOT exist *separate* from source association, so
    # it can only be read/updated/deleted in the context of a source association
    get:
      operationId: implementation.read_sample_association
      tags:
        - Sample
      summary: Get information about a sample associated with this source
      description:  Get information about a sample associated with this source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/sample_id'
      responses:
        '200':
          description: Successfully returned sample information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sample'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
    put:
      operationId: implementation.update_sample_association
      tags:
        - Sample
      summary: Update information about a sample associated with this source
      description:  Update information about a sample associated with this source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/sample_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sample'
      responses:
        '200':
          description: Successfully updated sample information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sample'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          # NB: This error would cover the case where you can't update a sample's info bc we already received it
          $ref: '#/components/responses/422UnprocessableEntity'
    delete:
      tags:
        - Sample
      operationId: implementation.dissociate_sample
      summary: Dissociate a sample from a source
      description: Dissociate a sample from a source
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/sample_id'
      responses:
        '204':
          description: Sample was dissociated from source
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          # NB: This error would cover the case where you can't dissociate it bc it was already processed
          $ref: '#/components/responses/422UnprocessableEntity'

  # NB: "surveys" is used as a path component in two different ways (here nested under sample and above nested
  # directly under source.  The dev team assessed this and decided this dual usage was not unacceptably confusing.
  '/accounts/{acct_id}/sources/{source_id}/samples/{sample_id}/surveys':
    get:
      operationId: implementation.read_answered_survey_associations
      tags:
        - Answered Survey Associations
      summary: Get list of answered surveys associated with this sample
      description: Get list of answered surveys associated with this sample
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/sample_id'
      responses:
        '200':
          description: Successfully returned list of survey associations
          content:
            application/json:
              schema:
                type: array
                items:  # TODO: should I also return the answered survey id that goes with each association?
                  type: integer
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
    post:
      operationId: implementation.associate_answered_survey
      tags:
        - Answered Survey Association
      summary: Associate an answered survey with this sample
      description: Associate an answered survey with this sample
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/sample_id'
      requestBody:
        content:
          application/json:
            schema:
              type: integer
            example:
              answered_survey_id: 1264
      responses:
        '201':
          description: Successfully associated answered survey with sample
          headers:
            Location:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          $ref: '#/components/responses/422UnprocessableEntity'

  '/accounts/{acct_id}/sources/{source_id}/samples/{sample_id}/surveys/{survey_id}':
    # NB: I can't really see a way that this can be updated, or even viewed--the association simply exists or doesn't
    delete:
      tags:
        - Answered Survey Association
      operationId: implementation.dissociate_answered_survey
      summary: Dissociate an answered survey from a sample
      description: Dissociate an answered survey from a sample
      parameters:
        - $ref: '#/components/parameters/acct_id'
        - $ref: '#/components/parameters/source_id'
        - $ref: '#/components/parameters/sample_id'
        - $ref: '#/components/parameters/survey_id'
      responses:
        '204':
          description: Answered survey was dissociated from sample
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'

  '/kits/':
    get:
      operationId: implementation.read_kit
      tags:
        - Kit
      summary: Get list of samples in kit that are not assigned to a source
      description: Get list of samples in kit that are not assigned to a source
      parameters:
        - $ref: '#/components/parameters/kit_name'
        - $ref: '#/components/parameters/kit_code'
      responses:
        '200':
          description: Successfully returned list of unassigned samples
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sample'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          $ref: '#/components/responses/422UnprocessableEntity'


components:
  parameters:
    # path parameters
    acct_id: # Can be referenced as '#/components/parameters/acct_id'
      name: acct_id
      in: path
      description: Unique id specifying a user account
      schema:
        type: integer
      required: true
    kit_id:
      name: kit_id
      in: path
      description: Unique internal id specifying a kit
      schema:
        type: integer
      required: true
    sample_id:
      name: sample_id
      in: path
      description: Unique id specifying a sample associated with a source
      schema:
        type: integer
      required: true
    survey_id:
      name: survey_id
      in: path
      description: Unique internal id specifying a particular answered survey
      schema:
        $ref: '#/components/schemas/survey_id'
      required: true
    survey_template_id:
      name: survey_template_id
      in: path
      description: Unique internal id specifying a particular survey template
      schema:
        $ref: '#components/schemas/survey_template_id'
      required: true
    source_id:
      name: source_id
      in: path
      description: Unique id specifying a source
      schema:
        type: integer
      required: true

    # query parameters
    kit_code:
      name: kit_code
      in: query
      description: User-facing code of kit
      schema:
        $ref: '#/components/schemas/kit_code'
      required: true
    kit_name:
      name: kit_name
      in: query
      description: User-facing id of kit
      schema:
        $ref: '#/components/schemas/kit_name'
      required: true
    locale_code:
      name: locale_code
      in: query
      description: ISO code for user locale
      schema:
        $ref: '#/components/schemas/locale_code'
      required: true
    source_type:
      name: source_type
      in: query
      description: Type of sample
      schema:
        $ref: '#/components/schemas/source_type'
      required: true
  responses:
    401Unauthorized:   # Can be referenced as '#/components/responses/401Unauthorized'
      description: Invalid or missing token.
    404NotFound:       # Can be referenced as '#/components/responses/404NotFound'
      description: The specified resource was not found.
    422UnprocessableEntity:
      description: The instructions provided cannot be processed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    # account section
    account_type: # e.g., regular user or admin--room to grow
      type: string
      enum: [standard]
    created_at:
      type: string
      format: date-time
    email:
      type: string
      format: email
    first_name:        # Can be referenced as '#/components/schemas/first_name'
      type: string
    last_name:
      type: string
    locale_code:
      type: string
    updated_at:
      type: string
      format: date-time
    account:
      type: object
      properties:
        first_name:
          $ref: '#/components/schemas/first_name'
        last_name:
          $ref: '#/components/schemas/last_name'
        email:
          $ref: '#/components/schemas/email'
        address:
          $ref: '#/components/schemas/address'
        account_type:
          $ref: '#/components/schemas/account_type'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
    address:   # taken from https://opensource.zalando.com/restful-api-guidelines/#address-fields
      description:
        an address of a location/destination
      type: object
      properties:
        care_of:
          description: |
            (aka c/o) the person that resides at the address, if different from
            addressee. E.g. used when sending a personal parcel to the
            office /someone else's home where the addressee resides temporarily
          type: string
          example: Consulting Services GmbH
        street:
          description: |
            the full street address including house number and street name
          type: string
          example: Schönhauser Allee 103
        additional:
          description: |
            further details like building name, suite, apartment number, etc.
          type: string
          example: 2. Hinterhof rechts
        city:
          description: |
            name of the city / locality
          type: string
          example: Berlin
        zip:
          description: |
            zip code or postal code
          type: string
          example: 14265
        country_code:
          description: |
            the country code according to
            [iso-3166-1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
          example: DE
      required:
        - street
        - city
        - zip
        - country_code

    # kit section
    kit_code:
      type: string
    kit_name:
      type: string

    # sample section
    sample_barcode:
      type: string
    sample_datetime:
      type: string
      format: date-time
    sample_notes:
      type: string
    sample_site:
      type: string
      enum: [stool, saliva, other]
    sample_status:
      type: string
      enum: [received, not received]
    sample:
      type: object
      properties:
        sample_barcode:
          $ref: '#/components/schemas/sample_barcode'
        sample_site:
          $ref: '#/components/schemas/sample_site'
        sample_status:
          $ref: '#/components/schemas/sample_status'
        sample_datetime:
          $ref: '#/components/schemas/sample_datetime'
        sample_notes:
          $ref: '#/components/schemas/sample_notes'

    # source section
    source_name:
      type: string
    source_type:
      type: string
      enum: [human, animal, environmental]
    animal_source:
      type: object
      properties:
        source_type:
          $ref: '#/components/schemas/source_type'
        source_name:
          $ref: '#/components/schemas/source_name'
        animal_type:
          type: string
          enum: [Dog, Cat, Small Mammal, Large Mammal, Fish, Bird, Reptile, Amphibian, Other]
      additionalProperties: false
    environmental_source:
      type: object
      properties:
        source_type:
          $ref: '#/components/schemas/source_type'
        source_name:
          $ref: '#/components/schemas/source_name'
      additionalProperties: false
    human_source:
      type: object
      properties:
        source_type:
          $ref: '#/components/schemas/source_type'
        source_name:
          $ref: '#/components/schemas/source_name'
        is_consented:
          type: boolean
      additionalProperties: false

    # survey template section
    survey_template_id:
      type: integer
    survey_template_title:
      type: string
    survey_template_type:
      type: string # someday could be an enum if we know choices
    survey_template_version:
      type: number # thinking e.g. 1.3?

    # survey section
    survey_id:
      type: integer
    survey_text:
      # The contents of this string ARE structured, but their structure is not specified in THIS api.
      type: string

    # error section
    Error: # Taken straight from https://swagger.io/docs/specification/describing-responses/
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    not_yet_implemented:
      type: string

  securitySchemes:
    Oauth2Scheme:
      type: oauth2
      x-tokenInfoFunc: implementation.verify_and_decode_token
      flows:
        authorizationCode:
          authorizationUrl: 'https://example.com/oauth2/dialog' # dummy; replace with real
          tokenUrl: 'https://example.com/oauth2/token' # dummy; replace with real
          scopes:
            uid: Unique identifier of the user accessing the service.